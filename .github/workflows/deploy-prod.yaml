## This workflow is executed manually by a developer.
##
## Project: convolution-manager-ui
## Repository: https://github.com/novadevs-opensource/convolution-manager-ui.git
## Version: 0.0.2
## Aim: Deploy the project in AWS S3 static website for production environment.

name: Release to Production

# This workflow is triggered manually
on:
  workflow_dispatch:

# Permission can be added at job level or workflow level
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

env:
  NODE_VERSION: 23
  DIR_TO_UPLOAD: dist

defaults:
  run:
    shell: bash

jobs:
  deploy:
    if: github.event_name == 'workflow_dispatch'

    name: Deploy to Prod
    runs-on: ubuntu-latest
    environment: prod

    steps:
      # https://github.com/actions/checkout
      - name: Clone the repository
        uses: actions/checkout@v4

      # https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_OIDC }}

      # https://github.com/actions/setup-node
      - name: Use Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Download env file from AWS SSM Parameter Store
        run: |
          aws ssm \
            get-parameter \
            --with-decryption \
            --name ${{ secrets.AWS_SSM_PS }} \
            --output text \
            --query 'Parameter.Value' \
            > .env

      - name: Install the project dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Upload to S3
        working-directory: ${{ env.DIR_TO_UPLOAD }}
        run: |
          aws s3 sync ./ s3://${{ secrets.AWS_BUCKET }} --delete

      # https://github.com/slackapi/slack-github-action
      - name: Send success notification
        if: success()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "Deployment to Production."
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":rocket: :rocket: *Successfully deployed!* :rocket: :rocket:"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Repository:* ${{ github.repository }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Branch:* ${{ github.ref }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Commit:* ${{ github.sha }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Workflow:* ${{ github.workflow }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Run ID:* ${{ github.run_id }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*User:* ${{ github.actor }}"

      # https://github.com/slackapi/slack-github-action
      - name: Send failure notification
        if: failure()
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "Deployment to Production."
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":rotating_light: :rotating_light: *Deployment failed!* :rotating_light: :rotating_light:"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Repository:* ${{ github.repository }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Branch:* ${{ github.ref }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Commit:* ${{ github.sha }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Workflow:* ${{ github.workflow }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Run ID:* ${{ github.run_id }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*User:* ${{ github.actor }}"
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "*Run ID URL:* https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
